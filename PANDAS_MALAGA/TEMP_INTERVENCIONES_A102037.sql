DROP TABLE TEMP_INTERVENCIONES_A102037;

CREATE TABLE TEMP_INTERVENCIONES_A102037 NOLOGGING PARALLEL NOMONITORING
AS
(
SELECT PQ_CAB_ID, PQ_DET_ID, ORDEN, IQ_PRE_ID, IQ_POST_ID, PREING_DET_ID, NVL(EPISODIO_ID,-1) NATID_EPISODIO, TIPO_PROGRAMACION, ID_USUARIO, DURACION_PREVISTA, ADMISION_ID, CENTRO_ID, UNI_FUNCIONAL_ID, QUIROFANO, ESTADO_ID, NVL(MODALIDAD_ASIST,-1) IND_MODALIDAD_ASISTENCIAL,
FECHA_HORA_INICIO, FECHA_HORA_FIN
--*--count(*)
  FROM REP_HIS_OWN.ADM_QRF_IQ_PRE@HUE40DAE
       LEFT JOIN REP_HIS_OWN.ADM_EPISODIO@HUE40DAE
          USING (EPISODIO_ID)
       JOIN REP_HIS_OWN.ADM_QRF_PQ_DET@HUE40DAE
          USING (IQ_PRE_ID)
       JOIN REP_HIS_OWN.ADM_QRF_PQ_CAB@HUE40DAE
          USING (PQ_CAB_ID)
 WHERE /*MODALIDAD_ASIST = 1 */
 /*AND ESTADO_ID NOT IN (2, 4) */
 /*AND */ IQ_DESPR_ID IS NULL 
 AND (FCH_CIERRE IS NULL OR (FCH_APERTURA <> FCH_CIERRE))
 AND FECHA_HORA_INICIO >= ADD_MONTHS (TRUNC (SYSDATE, 'YEAR'), -12) 
 );
 /
 DROP TABLE TEMP_INTERVENCIONES_A202037;

CREATE TABLE TEMP_INTERVENCIONES_A202037 NOLOGGING PARALLEL NOMONITORING
AS
SELECT /*+DRIVING_SITE(ADM_EPISODIO)*/  EPISODIO_ID, MODALIDAD_ASIST, USUARIO, PQ_DET_ID, FCH_APERTURA, HORA_APERTURA, FCH_CIERRE, HORA_CIERRE
  FROM REP_HIS_OWN.ADM_EPISODIO@HUE40DAE E 
  JOIN TEMP_INTERVENCIONES_A102037 T ON 
  (T.NATID_EPISODIO < 0 
  AND E.USUARIO = T.ID_USUARIO 
  --AND E.MODALIDAD_ASIST <> 4 
  AND TRUNC (T.FECHA_HORA_INICIO) >= E.FCH_APERTURA
  AND (FCH_CIERRE IS NULL OR (TRUNC(FCH_APERTURA) <> TRUNC(FCH_CIERRE) AND TRUNC(T.FECHA_HORA_INICIO) <= E.FCH_CIERRE))
  );
  