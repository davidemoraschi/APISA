/* Formatted on 5/8/2014 12:13:24 (QP5 v5.163.1008.3004) */
UPDATE (SELECT NATID_ADMISION, NATID_NUHSA, NUHSA
          FROM    TEMP_INGRESOS_A102037
               LEFT JOIN
                  COM_USUARIO
               ON (NATID_NUHSA = ID_USUARIO))
   SET NATID_NUHSA = NVL (NUHSA, '-1');

UPDATE (
SELECT NATID_ADMISION, NATID_CAMA_PRIMER_TRASLADO, UBIC_TERMINAL
          FROM    TEMP_INGRESOS_A102037 
           JOIN REP_HIS_OWN.ADM_TRASLADO@HUE40DAE ON (NATID_ADMISION = ADMISION AND TRASLADO_PADRE IS NULL)
          ) SET NATID_CAMA_PRIMER_TRASLADO = UBIC_TERMINAL;

SELECT FUNC_RECUPERA_PRIMER_TRASLADO(NATID_ADMISION)         
FROM  TEMP_INGRESOS_A102037;

--UPDATE TEMP_INGRESOS_A102037 SET NATID_CAMA_PRIMER_TRASLADO = FUNC_RECUPERA_PRIMER_TRASLADO(NATID_ADMISION);
CREATE SYNONYM ADM_TRASLADO FOR REP_HIS_OWN.ADM_TRASLADO@HUE40DAE;
DROP SYNONYM UBICACIONES;
CREATE SYNONYM UBICACIONES FOR REP_PRO_EST.UBICACIONES@HUE40DAE;

--UPDATE (
CREATE TABLE TEMP_INGRESOS_A202037 NOLOGGING PARALLEL NOMONITORING
AS
SELECT NATID_ADMISION, UBIC_TERMINAL FROM  TEMP_INGRESOS_A102037 JOIN ADM_TRASLADO ON (NATID_ADMISION=ADMISION)
WHERE TRASLADO_PADRE IS NULL
--) SET NATID_CAMA_PRIMER_TRASLADO=UBIC_TERMINAL
;
CREATE INDEX TEMP_INGRESOS_B102037_I1 ON TEMP_INGRESOS_A202037
(NATID_ADMISION, UBIC_TERMINAL)
NOLOGGING
PARALLEL;


UPDATE TEMP_INGRESOS_A102037 A1 SET NATID_CAMA_PRIMER_TRASLADO = (SELECT NVL(UBIC_TERMINAL, -1) FROM TEMP_INGRESOS_A202037 B1 WHERE A1.NATID_ADMISION=B1.NATID_ADMISION);
UPDATE TEMP_INGRESOS_A102003 A1 SET NATID_CAMA_PRIMER_TRASLADO = (SELECT NVL(UBIC_TERMINAL, -1) FROM TEMP_INGRESOS_A202003 B1 WHERE A1.NATID_ADMISION=B1.NATID_ADMISION);

SELECT /*COUNT(NATID_ADMISION),*/ NATID_ADMISION FROM TEMP_INGRESOS_A202003
GROUP BY NATID_ADMISION
HAVING COUNT(NATID_ADMISION)>1;

UPDATE TEMP_INGRESOS_A102037 A1 SET NATID_CENTRO_PRIMER_TRASLADO =  NVL((SELECT NATID_CENTRO FROM TEMP_CAMAS_A102037 B1 WHERE A1.NATID_CAMA_PRIMER_TRASLADO = B1.NATID_CAMA), -1);

SELECT * FROM REP_HIS_OWN.ADM_TRASLADO@SEE41DAE
WHERE TRASLADO_PADRE IS NULL AND ADMISION
IN (SELECT /*COUNT(NATID_ADMISION),*/ NATID_ADMISION FROM TEMP_INGRESOS_A202003
GROUP BY NATID_ADMISION
HAVING COUNT(NATID_ADMISION)>1)
ORDER BY ADMISION;